<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mask.backend.mapper.AppointmentMapper">
  <resultMap id="BaseResultMap" type="com.mask.backend.pojo.Appointment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="max" jdbcType="INTEGER" property="max" />
    <result column="limit" jdbcType="INTEGER" property="limit" />
    <result column="startTime" jdbcType="VARCHAR" property="starttime" />
    <result column="endTime" jdbcType="VARCHAR" property="endtime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, "max", "limit", startTime, endTime, "status"
  </sql>
  <select id="selectByExample" parameterType="com.mask.backend.pojo.AppointmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from appointment_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from appointment_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from appointment_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mask.backend.pojo.AppointmentExample">
    delete from appointment_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.mask.backend.pojo.Appointment" useGeneratedKeys="true">
    insert into appointment_list ("max", "limit", startTime, 
      endTime, "status")
    values (#{max,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}, #{starttime,jdbcType=VARCHAR}, 
      #{endtime,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.mask.backend.pojo.Appointment" useGeneratedKeys="true">
    insert into appointment_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="max != null">
        "max",
      </if>
      <if test="limit != null">
        "limit",
      </if>
      <if test="starttime != null">
        startTime,
      </if>
      <if test="endtime != null">
        endTime,
      </if>
      <if test="status != null">
        "status",
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="max != null">
        #{max,jdbcType=INTEGER},
      </if>
      <if test="limit != null">
        #{limit,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mask.backend.pojo.AppointmentExample" resultType="java.lang.Long">
    select count(*) from appointment_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update appointment_list
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.max != null">
        "max" = #{record.max,jdbcType=INTEGER},
      </if>
      <if test="record.limit != null">
        "limit" = #{record.limit,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null">
        startTime = #{record.starttime,jdbcType=VARCHAR},
      </if>
      <if test="record.endtime != null">
        endTime = #{record.endtime,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        "status" = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update appointment_list
    set id = #{record.id,jdbcType=INTEGER},
      "max" = #{record.max,jdbcType=INTEGER},
      "limit" = #{record.limit,jdbcType=INTEGER},
      startTime = #{record.starttime,jdbcType=VARCHAR},
      endTime = #{record.endtime,jdbcType=VARCHAR},
      "status" = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mask.backend.pojo.Appointment">
    update appointment_list
    <set>
      <if test="max != null">
        "max" = #{max,jdbcType=INTEGER},
      </if>
      <if test="limit != null">
        "limit" = #{limit,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        startTime = #{starttime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null">
        endTime = #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        "status" = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mask.backend.pojo.Appointment">
    update appointment_list
    set "max" = #{max,jdbcType=INTEGER},
      "limit" = #{limit,jdbcType=INTEGER},
      startTime = #{starttime,jdbcType=VARCHAR},
      endTime = #{endtime,jdbcType=VARCHAR},
      "status" = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>